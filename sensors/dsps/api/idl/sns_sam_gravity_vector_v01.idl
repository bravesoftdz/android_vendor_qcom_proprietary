/*****************************************************************************
  @FILE     sns_sam_gravity_vector.idl

  @BRIEF    Message definition for Gravity vector.

  @DESCRIPTION
  This file defines messages provided to clients to use
  Gravity/Linear Acceleration algorithm services.

  @COPYRIGHT
  Copyright (c) 2011-2013 Qualcomm Technologies, Inc. All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/
include "sns_sam_common_v01.idl";

revision 6;

const SNS_SENSOR_ACCURACY_UNRELIABLE = 0;
const SNS_SENSOR_ACCURACY_LOW        = 1;
const SNS_SENSOR_ACCURACY_MEDIUM     = 2;
const SNS_SENSOR_ACCURACY_HIGH       = 3;

const SNS_SAM_GRAVITY_MAX_REPORTS_IN_BATCH = 57;
/**< Max number of reports in a batch indication -
     set based on max payload size supported by transport framework
*/

enum {
  SNS_SAM_GRAVITY_DEV_STATE_UNKNOWN = 0,
  SNS_SAM_GRAVITY_DEV_ABS_REST      = 1,
  SNS_SAM_GRAVITY_DEV_REL_REST      = 2,
  SNS_SAM_GRAVITY_DEV_MOTION        = 3
} sns_sam_gravity_dev_e;

struct {
  float gravity[3];
  /**< gravity vector along axis x/y/z, unit m/s/s, SAE coordinate frame */
  float lin_accel[3];
  /**< linear acceleration along axis x/y/z,unit m/s/s, SAE coordinate frame */
  uint8 accuracy;
  /**< sensor accuracy
       SNS_SENSOR_ACCURACY_UNRELIABLE = 0,
       SNS_SENSOR_ACCURACY_LOW        = 1,
       SNS_SENSOR_ACCURACY_MEDIUM     = 2,
       SNS_SENSOR_ACCURACY_HIGH       = 3 */
} sns_sam_gravity_result_s;

//============================================================================
/** @COMMAND SNS_SAM_GRAVITY_ENABLE
    @BRIEF This command enables a Gravity algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_GRAVITY_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint32  report_period;
  /**< unit of seconds, Q16; determines algorithm output report rate
      specify 0 to report at sampling rate
  */
  optional uint32   sample_rate;
  /**< sample rate in Hz, Q16;
      if sample rate is less than report rate, it is set to report rate
  */
  //! @VERSION 1.2
  optional sns_suspend_notification_s notify_suspend;
  /**< Identifies if indications for this request should be sent
       when the processor is in suspend state.

       If this field is not specified, default value will be set to
       notify_suspend->proc_type                  = SNS_PROC_APPS
       notify_suspend->send_indications_during_suspend  = false

       This field does not have any bearing on error indication
       messages, which will be sent even during suspend.
    */
} sns_sam_gravity_enable_req_msg;

//! @MSG     SNS_SAM_GRAVITY_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s  resp = 2;
  optional uint8               instance_id;
  /**<
    Instance ID is assigned by SAM.
    The client shall use this instance ID for future messages associated with
    this algorithm instance.
  */
} sns_sam_gravity_enable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_GRAVITY_DISABLE
    @BRIEF This command disables a Gravity algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_GRAVITY_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8  instance_id;
  /**< Instance ID identifies the algorithm instance.  */
} sns_sam_gravity_disable_req_msg;

//! @MSG     SNS_SAM_GRAVITY_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s  resp = 2;
  optional uint8               instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_gravity_disable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_GRAVITY_REPORT
    @BRIEF Report containing Gravity algorithm output
*/
//============================================================================

//! @MSG     SNS_SAM_GRAVITY_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory uint8                     instance_id;
  /**< Instance ID identifies the algorithm instance. */
  mandatory uint32                    timestamp;
  /**< Timestamp of input used to generate the algorithm output */
  mandatory sns_sam_gravity_result_s  result;
  /**< Output of the Gravity algorithm instance */
  //! @VERSION 1.3
  optional sns_sam_gravity_dev_e      device_motion_state;
  /**< The device's current motion-state, as calculated in Gravity algo
       GRAVITY_DEV_STATE_UNKNOWN = 0,
       GRAVITY_DEV_ABS_REST      = 1,
       GRAVITY_DEV_REL_REST      = 2,
       GRAVITY_DEV_MOTION        = 3 */
} sns_sam_gravity_report_ind_msg;


//============================================================================
/** @COMMAND SNS_SAM_GRAVITY_GET_REPORT
    @BRIEF This command fetches latest report output of a Gravity algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_GRAVITY_GET_REPORT_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8  instance_id;
  /**< Instance ID identifies the algorithm instance.  */
} sns_sam_gravity_get_report_req_msg;

//! @MSG     SNS_SAM_GRAVITY_GET_REPORT_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s         resp = 2;
  optional uint8                      instance_id;
  /**< Instance ID identifies the algorithm instance. */
  optional uint32                     timestamp;
  /**< Timestamp of input used to generate the algorithm output */
  optional sns_sam_gravity_result_s   result;
  /**< Output of the Gravity algorithm instance */
  //! @VERSION 1.3
  optional sns_sam_gravity_dev_e      device_motion_state;
  /**< The device's current motion-state, as calculated in Gravity algo
       GRAVITY_DEV_STATE_UNKNOWN = 0
       GRAVITY_DEV_ABS_REST      = 1
       GRAVITY_DEV_REL_REST      = 2
       GRAVITY_DEV_MOTION        = 3 */
} sns_sam_gravity_get_report_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_GRAVITY_ERROR
    @BRIEF Asynchronous error indication for a Gravity algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_GRAVITY_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8  error;
  /**< Sensor1 error code */
  mandatory uint8  instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_gravity_error_ind_msg;


//! @VERSION 1.4
//============================================================================
/** @COMMAND SNS_SAM_GRAVITY_BATCH
    @BRIEF This command handles batch mode for a Gravity algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_GRAVITY_BATCH_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance ID identifies the algorithm instance.  */

  mandatory int32 batch_period;
  /**< Specifies interval over which reports are to be batched in seconds, Q16.
       P = 0 to disable batching.
       P > 0 to enable batching.
    */

  optional sns_batch_req_type_e req_type;
  /**< Optional request type
       0 – Do not wake client from suspend when buffer is full.
       1 – Wake client from suspend when buffer is full.
       2 – Use to get max buffer depth. Does not enable/disable batching.
           instance_id and batch_period are ignored for this request type.
       Defaults to 0.
    */
} sns_sam_gravity_batch_req_msg;

//! @MSG     SNS_SAM_GRAVITY_BATCH_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Algorithm instance ID maintained/assigned by SAM */

  optional uint32 max_batch_size;
  /**< Max supported batch size */

  optional uint32 timestamp;
  /**< Timestamp when the batch request was processed in SSC ticks */
} sns_sam_gravity_batch_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_GRAVITY_BATCH_REPORT
    @BRIEF Report containing a batch of algorithm outputs
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_GRAVITY_BATCH_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------
struct {
  sns_sam_gravity_result_s result;
  /**< Gravity algorithm output report */

  sns_sam_gravity_dev_e device_motion_state;
  /**< The device's current motion-states, as calculated in Gravity algo
       GRAVITY_DEV_STATE_UNKNOWN = 0,
       GRAVITY_DEV_ABS_REST      = 1,
       GRAVITY_DEV_REL_REST      = 2,
       GRAVITY_DEV_MOTION        = 3 */
} sns_sam_gravity_report_s;

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance */

  mandatory uint32 first_report_timestamp;
  /**< Timestamp of input used to generate the first algorithm output in batch, in SSC ticks */

  mandatory uint16 timestamp_offsets<SNS_SAM_GRAVITY_MAX_REPORTS_IN_BATCH>;
  /**< Offsets from timestamp of previous report in batch */

  mandatory sns_sam_gravity_report_s reports<SNS_SAM_GRAVITY_MAX_REPORTS_IN_BATCH>;
  /**< Gravity algorithm output reports */

  //! @VERSION 1.5
  optional uint8 ind_type;
  /**< Optional batch indication type
       SNS_BATCH_ONLY_IND - Standalone batch indication. Not part of a back to back indication stream
       SNS_BATCH_FIRST_IND - First indication in stream of back to back indications
       SNS_BATCH_INTERMEDIATE_IND - Intermediate indication in stream of back to back indications
       SNS_BATCH_LAST_IND - Last indication in stream of back to back indications
    */

} sns_sam_gravity_batch_ind_msg;

//! @VERSION 1.5
//============================================================================
/** @COMMAND SNS_SAM_GRAV_UPDATE_BATCH_PERIOD
    @BRIEF This command updates active batch period for a Gravity algorithm
           when batching is ongoing.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_GRAV_UPDATE_BATCH_PERIOD_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance ID identifies the algorithm instance.  */

  mandatory int32 active_batch_period;
  /**< Specifies new interval (in seconds, Q16) over which reports are to be
       batched when the client processor is awake. Only takes effect if
       batching is ongoing.
       P > 0 to to override active batch period set in batch enable request.
       P = 0 to switch to active batch period set in batch enable request.
    */
} sns_sam_grav_update_batch_period_req_msg;

//! @MSG     SNS_SAM_GRAV_UPDATE_BATCH_PERIOD_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Algorithm instance ID maintained/assigned by SAM */

  optional uint32 timestamp;
  /**< Timestamp when the batch request was processed in SSC ticks */
} sns_sam_grav_update_batch_period_resp_msg;

//============================================================================
// Service definition
//============================================================================
service SNS_SAM_GRAVITY_VECTOR_SVC {
  //! @ID SNS_COMMON_CANCEL
  sns_common_cancel_req_msg            SNS_SAM_GRAVITY_CANCEL_REQ,
  sns_common_cancel_resp_msg           SNS_SAM_GRAVITY_CANCEL_RESP
    = 0x00;

  //! @ID SNS_COMMON_VERSION
  sns_common_version_req_msg           SNS_SAM_GRAVITY_VERSION_REQ,
  sns_common_version_resp_msg          SNS_SAM_GRAVITY_VERSION_RESP
    = 0x01;

  //! @ID SNS_SAM_GRAVITY_ENABLE
  sns_sam_gravity_enable_req_msg       SNS_SAM_GRAVITY_ENABLE_REQ,
  sns_sam_gravity_enable_resp_msg      SNS_SAM_GRAVITY_ENABLE_RESP
    = 0x02;

  //! @ID SNS_SAM_GRAVITY_DISABLE
  sns_sam_gravity_disable_req_msg      SNS_SAM_GRAVITY_DISABLE_REQ,
  sns_sam_gravity_disable_resp_msg     SNS_SAM_GRAVITY_DISABLE_RESP
    = 0x03;

  //! @ID SNS_SAM_GRAVITY_GET_REPORT
  sns_sam_gravity_get_report_req_msg   SNS_SAM_GRAVITY_GET_REPORT_REQ,
  sns_sam_gravity_get_report_resp_msg  SNS_SAM_GRAVITY_GET_REPORT_RESP
    = 0x04;

  //! @ID SNS_SAM_GRAVITY_REPORT
  sns_sam_gravity_report_ind_msg       SNS_SAM_GRAVITY_REPORT_IND
    = 0x05;

  //! @ID SNS_SAM_GRAVITY_ERROR
  sns_sam_gravity_error_ind_msg        SNS_SAM_GRAVITY_ERROR_IND
    = 0x06;

  //! @ID SNS_SAM_GRAVITY_BATCH
  sns_sam_gravity_batch_req_msg        SNS_SAM_GRAVITY_BATCH_REQ,
  sns_sam_gravity_batch_resp_msg       SNS_SAM_GRAVITY_BATCH_RESP
    = 0x21;

  //! @ID SNS_SAM_GRAVITY_BATCH_REPORT
  sns_sam_gravity_batch_ind_msg        SNS_SAM_GRAVITY_BATCH_IND
    = 0x22;

  //! @ID SNS_SAM_GRAV_UPDATE_BATCH_PERIOD
  sns_sam_grav_update_batch_period_req_msg  SNS_SAM_GRAV_UPDATE_BATCH_PERIOD_REQ,
  sns_sam_grav_update_batch_period_resp_msg SNS_SAM_GRAV_UPDATE_BATCH_PERIOD_RESP
    = 0x23;

  //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
  sns_sam_get_algo_attrib_req_msg      SNS_SAM_GRAV_GET_ATTRIBUTES_REQ,
  sns_sam_get_algo_attrib_resp_msg     SNS_SAM_GRAV_GET_ATTRIBUTES_RESP
    = 0x24;

} = SNS_QMI_SVC_ID_20;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================

