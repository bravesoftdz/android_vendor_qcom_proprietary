/*****************************************************************************
  @FILE     sns_sam_quaternion.idl

  @BRIEF    Message definition for Quaternion.

  @DESCRIPTION
  This file defines messages provided to clients to use
  Quaternion algorithm services.

  @COPYRIGHT
  Copyright (c) 2011-2013 Qualcomm Technologies, Inc.  All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/
include "sns_sam_common_v01.idl";

revision 2;

struct {
  float quaternion[4];
  /**< quaternion output in floating point in the following representation
  <cos(theta/2), x*sin(theta/2), y*sin(theta/2), z*sin(theta/2)> 
  where the device has rotated through an angle theta around axis <x, y, z>
  during latest reporting period*/
} sns_sam_quat_result_s;

//============================================================================
/** @COMMAND SNS_SAM_QUAT_ENABLE
    @BRIEF This command enables a Quaternion algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_QUAT_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint32  report_period;
  /**< unit of seconds, Q16; determines algorithm output report rate 
	   specify 0 to report at sampling rate 
  */
  optional uint32   sample_rate;
  /**< sample rate in Hz, Q16; 
	   if sample rate is less than report rate, it is set to report rate
  */ 
} sns_sam_quat_enable_req_msg;

//! @MSG     SNS_SAM_QUAT_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s  resp = 2;
  optional uint8               instance_id;
  /**<
    Instance ID is assigned by SAM.
    The client shall use this instance ID for future messages associated with
    this algorithm instance.
  */
} sns_sam_quat_enable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_QUAT_DISABLE
    @BRIEF This command disables a Quaternion algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_QUAT_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8  instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_quat_disable_req_msg;

//! @MSG     SNS_SAM_QUAT_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s  resp = 2;
  optional uint8               instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_quat_disable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_QUAT_REPORT
    @BRIEF Report containing Quaternion algorithm output
*/
//============================================================================

//! @MSG     SNS_SAM_QUAT_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory uint8                  instance_id;
  /**< Instance ID identifies the algorithm instance. */
  mandatory uint32                 timestamp;
  /**< Timestamp of input used to generate the algorithm output */
  mandatory sns_sam_quat_result_s  result;
  /**< Output of the Quaternion algorithm instance */
} sns_sam_quat_report_ind_msg;


//============================================================================
/** @COMMAND SNS_SAM_QUAT_GET_REPORT
    @BRIEF This command fetches latest report output of a Quaternion algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_QUAT_GET_REPORT_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8  instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_quat_get_report_req_msg;

//! @MSG     SNS_SAM_QUAT_GET_REPORT_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s      resp = 2;
  optional uint8                   instance_id;
  /**< Instance ID identifies the algorithm instance. */
  optional uint32                  timestamp;
  /**< Timestamp of input used to generate the algorithm output */
  optional sns_sam_quat_result_s   result;
  /**< Output of the Quaternion algorithm instance */
} sns_sam_quat_get_report_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_QUAT_ERROR
    @BRIEF Asynchronous error indication for a Quaternion algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_QUAT_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8  error;
  /**< Sensor1 error code */
  mandatory uint8  instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_quat_error_ind_msg;


//============================================================================
// Service definition
//============================================================================
service SNS_SAM_QUATERNION_SVC {
  //! @ID SNS_COMMON_CANCEL
  sns_common_cancel_req_msg        SNS_SAM_QUAT_CANCEL_REQ,
  sns_common_cancel_resp_msg       SNS_SAM_QUAT_CANCEL_RESP
    = 0x00;

  //! @ID SNS_COMMON_VERSION
  sns_common_version_req_msg       SNS_SAM_QUAT_VERSION_REQ,
  sns_common_version_resp_msg      SNS_SAM_QUAT_VERSION_RESP
    = 0x01;

  //! @ID SNS_SAM_QUAT_ENABLE
  sns_sam_quat_enable_req_msg       SNS_SAM_QUAT_ENABLE_REQ,
  sns_sam_quat_enable_resp_msg      SNS_SAM_QUAT_ENABLE_RESP
    = 0x02;

  //! @ID SNS_SAM_QUAT_DISABLE
  sns_sam_quat_disable_req_msg      SNS_SAM_QUAT_DISABLE_REQ,
  sns_sam_quat_disable_resp_msg     SNS_SAM_QUAT_DISABLE_RESP
    = 0x03;

  //! @ID SNS_SAM_QUAT_GET_REPORT
  sns_sam_quat_get_report_req_msg   SNS_SAM_QUAT_GET_REPORT_REQ,
  sns_sam_quat_get_report_resp_msg  SNS_SAM_QUAT_GET_REPORT_RESP
    = 0x04;

  //! @ID SNS_SAM_QUAT_REPORT
  sns_sam_quat_report_ind_msg       SNS_SAM_QUAT_REPORT_IND
    = 0x05;

  //! @ID SNS_SAM_QUAT_ERROR
  sns_sam_quat_error_ind_msg        SNS_SAM_QUAT_ERROR_IND
    = 0x06;

  //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
  sns_sam_get_algo_attrib_req_msg   SNS_SAM_QUAT_GET_ATTRIBUTES_REQ,
  sns_sam_get_algo_attrib_resp_msg  SNS_SAM_QUAT_GET_ATTRIBUTES_RESP
    = 0x24;

} = SNS_QMI_SVC_ID_19;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================

